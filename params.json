{"body":"# One-koans\r\n\r\nOne-koans intends to be the semi-holy offspring of [ClojureScriptOne](https://github.com/brentonashworth/one), the [Clojure koans](https://github.com/functional-koans/clojure-koans), and [4Clojure](http://www.4clojure.com/). That is, use the power of ClojureScriptOne to meld the goodness of the incremental learning of the koans and the social opt-in self-propelled 4Clojure.\r\n\r\nThe name \"One-koans\" is a bad joke layered on top of the word [kōan](http://en.wikipedia.org/wiki/K%C5%8Dan). What is the sound of one kōans? Name pull requests are welcome, although the answer may be mu. \r\n\r\n# ClojureScript One\r\n\r\nWe think that [ClojureScript][] is amazing and that it provides endless\r\npossibilities for making web development much more fun. To realize\r\nthese possibilities, we need your help. Someone has to do the work to\r\nturn the possible into reality.\r\n\r\nWe think that the best way to convince you to help us is to allow you\r\nto experience the wonder of ClojureScript development for\r\nyourself. The purpose of this project is to help you get started with\r\nClojureScript as smoothly and quickly as possible and to set you up\r\nwith an excellent working environment.\r\n\r\nGetting started means many things. We often forget how much we need to\r\nknow to be comfortable in a programming environment. How do we\r\norganize code? How do we test? What is the most productive workflow?\r\nHow do we deploy our application? We will attempt to answer all of these\r\nquestions and provide working examples.\r\n\r\nThe project includes a working sample application, useful tools, and\r\nlibraries in various states of development. Many of the libraries in\r\nthe project will eventually mature and become their own projects. The\r\nprocess of creating good libraries and frameworks takes time and\r\nexperience. Instead of waiting until they are finished, we thought it\r\nwould be better to show you now. Once you see the potential, we know\r\nthat you will want to join in and help.\r\n\r\n# What's here\r\n\r\nThis project will help you lean how to:\r\n\r\n* use ClojureScript tools and other Clojure libraries to create a\r\n  productive development environment\r\n* effectively work with the ClojureScript tools\r\n* organize your code\r\n* keep visual design activities separate from application code\r\n* run ClojureScript (in a remote JavaScript environment) from Clojure\r\n* test ClojureScript using any Clojure test framework\r\n* structure a ClojureScript application\r\n* use Clojure data to talk to a Clojure service\r\n* build and deploy to Heroku\r\n* work with ClojureScript dependencies\r\n\r\n# Is this a library or a framework?\r\n\r\nClojureScript One is hard to classify. It is not a library or a\r\nframework. It is more like a classroom, a laboratory or a starter\r\nkit. Frameworks limit you to a specific way of thinking. Libraries\r\nattempt to do something for you. We hope that this project will help\r\nyou to think of things that no one has ever thought of and empower you\r\nto do things that you may not have thought possible. But most of all,\r\nwe hope that it will show you how much fun web development can be in\r\nClojureScript.\r\n\r\nThe intended use of the project is:\r\n\r\n1. Get all the tools running\r\n2. Read through the wiki, running all the examples\r\n3. Fire up a browser-connected REPL and explore the sample application\r\n3. Use this project as a starting point for your own applications\r\n4. Contribute what you have learned back to this project\r\n\r\n# Getting started\r\n\r\nYou will need to have Java, [lein][] and git installed. Execute the\r\nfollowing commands to install and run One:\r\n\r\n    git clone https://github.com/brentonashworth/one.git\r\n    cd one\r\n    lein bootstrap\r\n    lein repl\r\n\r\nAt the REPL prompt which appears, type `(go)`. Your browser will\r\nlaunch and navigate to the running application.\r\n\r\nOnce you have this running, see the [wiki][] and the [website][] for\r\nmore information.\r\n\r\n### Getting an exception when you run `lein repl`?\r\n\r\nIf you get an exception when you run `lein repl`, try \r\n[this workaround](https://github.com/brentonashworth/one/wiki/lein-repl-Problem-Workaround).\r\n\r\n# Getting Help\r\n\r\nThe best place to get help is on the\r\n[Clojure Mailing List](https://groups.google.com/group/clojure). You\r\ncan also log issues in the [project issue tracker][issues].\r\n\r\n# Contributing\r\n\r\nClojureScript One welcomes help from the community in the form of pull\r\nrequests, [bug reports][issues], [wiki][wiki] updates, and hugs. If\r\nyou wish to contribute code, please read [How We Work][how-we-work].\r\nIn particular, note that pull requests should target the\r\n`pull-requests` branch, not `master`.\r\n\r\n# Known Issues\r\n\r\n* ClojureScript One supports developing under Windows if you are using\r\n  Chrome, Firefox, or IE9. Versions of Internet Explorer previous to 9\r\n  are not supported at this time.\r\n* Everything on the\r\n  [project issues list](https://github.com/brentonashworth/one/issues).\r\n\r\n# One last rant\r\n\r\nClojureScript is designed to make client-service\r\napplications. Traditional web applications run mostly on a server with\r\na small amount of UI code running on the client. The problem with this\r\nkind of application is that there is a big giant network right in the\r\nmiddle of your application. We have learned how to deal with this so\r\nwell that we actually think this is a good way to write software. There\r\nare many applications for which this is a good approach. But there are\r\nalso many applications which would be better as client-service applications\r\nwhere the entire application runs in the client and uses backend services\r\nwhich can easily be thought of as other applications.\r\n\r\nThe reason we haven't used the right tool for the job in the past is\r\nbecause it was much harder than it should have been. For Clojure\r\ndevelopers, ClojureScript has changed this. ClojureScript allows us to\r\nwrite very large applications that run on any JavaScript platform. Not\r\nonly can we do it, but the experience is better than any other\r\nenvironment can offer, even JavaScript.\r\n\r\nClojureScript allows us to connect to and modify running\r\napplications, communicate with the server using only Clojure data, run\r\nClojureScript code in the browser from the server, use protocols to\r\nmake existing JavaScript play nice and much, much more.\r\n\r\n# License\r\n\r\nCopyright © 2012 Brenton Ashworth and Relevance, Inc\r\n\r\nDistributed under the Eclipse Public License, the same as Clojure uses. See the file COPYING.\r\n\r\n[ClojureScript]: https://github.com/clojure/clojurescript\r\n[lein]: https://github.com/technomancy/leiningen\r\n[wiki]: https://github.com/brentonashworth/one/wiki\r\n[website]: http://clojurescriptone.com\r\n[how-we-work]: https://github.com/brentonashworth/one/wiki/HowWeWork\r\n[issues]: https://github.com/brentonashworth/one/issues","google":"","tagline":"Learn to use ClojureScript to build single-page, single-language applications in a productive, effective and fun way.","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"One-koans"}